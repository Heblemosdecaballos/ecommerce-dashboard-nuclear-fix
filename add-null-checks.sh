#!/bin/bash

# Script para agregar verificaciones de null despu√©s de crear clientes Supabase
echo "üîß Agregando verificaciones de null para clientes Supabase..."

# Funci√≥n para agregar verificaciones de null
add_null_checks() {
    local file="$1"
    echo "üìù Procesando: $file"
    
    # Crear backup si no existe
    if [ ! -f "$file.backup" ]; then
        cp "$file" "$file.backup"
    fi
    
    # Patr√≥n para encontrar asignaciones de cliente Supabase
    # Buscar l√≠neas como: const supabase = createSafeSupabase...()
    if grep -q "const.*=.*createSafeSupabase.*Client()" "$file"; then
        echo "  ‚úì Encontradas asignaciones de cliente Supabase"
        
        # Agregar verificaci√≥n despu√©s de la asignaci√≥n
        # Esto es un ejemplo b√°sico - en la pr√°ctica necesitar√≠as l√≥gica m√°s espec√≠fica
        sed -i '/const.*=.*createSafeSupabase.*Client()/a\
\
    if (!supabase) {\
      console.warn("Supabase no est√° disponible");\
      return null; // o return fallback apropiado\
    }' "$file"
    fi
}

# Procesar archivos de API routes que son cr√≠ticos
echo "üîç Procesando API routes..."
find ./src/app/api -name "*.ts" | while read file; do
    if grep -q "createSafeSupabase" "$file"; then
        add_null_checks "$file"
    fi
done

echo "‚úÖ Verificaciones de null agregadas!"
echo "‚ö†Ô∏è  IMPORTANTE: Revisa manualmente los archivos para ajustar la l√≥gica de fallback"
echo "   Algunos archivos pueden necesitar l√≥gica espec√≠fica en lugar de 'return null'"
